using System;
using System.Collections.Generic;

using UE = UnityEngine;
using Encoding = System.Text.Encoding;

// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------


public interface ICubeState : Bolt.IState {
  Bolt.NetworkTransform CubeTransform {
    get;
  }
  UE.Color CubeColor {
    get;
    set;
  }
}
internal class CubeState : Bolt.NetworkState, ICubeState {
  public CubeState() : 
      base(CubeState_Meta.Instance) {
  }
  public Bolt.NetworkTransform CubeTransform {
    get {
      return Storage.Values[this.OffsetStorage + 0].Transform;
    }
  }
  public UE.Color CubeColor {
    get {
      return Storage.Values[this.OffsetStorage + 3].Color;
    }
    set {
      var en = this.RootState.Entity; if(!en.IsOwner) { BoltLog.Error("Only the owner can modify: 'CubeColor'"); return; };
      UE.Color oldValue;
      oldValue = Storage.Values[this.OffsetStorage + 3].Color;
      Storage.Values[this.OffsetStorage + 3].Color = value;
      if (Bolt.NetworkValue.Diff(oldValue, value)) {
        Storage.PropertyChanged(this.OffsetProperties + 1);
      }
    }
  }
}
internal class CubeState_Meta : Bolt.NetworkState_Meta, Bolt.ISerializerFactory {
  internal static CubeState_Meta Instance;
  static CubeState_Meta() {
    Instance = new CubeState_Meta();
    Instance.InitMeta();
  }
  Bolt.TypeId Bolt.IFactory.TypeId {
    get {
      return TypeId;
    }
  }
  Bolt.UniqueId Bolt.IFactory.TypeKey {
    get {
      return new Bolt.UniqueId(4, 53, 104, 44, 140, 126, 4, 72, 184, 168, 45, 215, 19, 190, 60, 130);
    }
  }
  System.Type Bolt.IFactory.TypeObject {
    get {
      return typeof(ICubeState);
    }
  }
  internal override void InitObject(Bolt.NetworkObj obj, Bolt.NetworkObj_Meta.Offsets offsets) {
    // 
    // Property: CubeTransform
    // EMPTY
    // 
    // Property: CubeColor
    // EMPTY
  }
  internal override void InitMeta() {
    // Setup fields
    this.TypeId = new Bolt.TypeId(1);
    this.CountStorage = 4;
    this.CountObjects = 1;
    this.CountProperties = 2;
    this.Properties = new Bolt.NetworkPropertyInfo[2];
    this.PropertyIdBits = 2;
    this.PacketMaxBits = 512;
    this.PacketMaxProperties = 16;
    this.PacketMaxPropertiesBits = 5;
    // 
    // Property: CubeTransform
    Bolt.NetworkProperty_Transform tmp0;
    tmp0 = new Bolt.NetworkProperty_Transform();
    tmp0.PropertyMeta = this;
    tmp0.Settings_Property("CubeTransform", 1, -1073741824);
    tmp0.Settings_Offsets(0 /*required-properties:1*/, 0 /*required-storage:3*/);
    tmp0.Settings_Space(Bolt.TransformSpaces.Local);
    tmp0.Settings_Vector(Bolt.PropertyFloatCompressionSettings.Create(), Bolt.PropertyFloatCompressionSettings.Create(), Bolt.PropertyFloatCompressionSettings.Create(), false);
    tmp0.Settings_Quaternion(Bolt.PropertyFloatCompressionSettings.Create(), false);
    tmp0.Settings_Extrapolation(Bolt.PropertyExtrapolationSettings.Create(9, 0.25f, 10f, Bolt.ExtrapolationVelocityModes.CalculateFromPosition));
    this.AddProperty(0 /*required-properties:1*/, 0 /*required-objects:0*/, tmp0, -1);
    // 
    // Property: CubeColor
    Bolt.NetworkProperty_Color tmp1;
    tmp1 = new Bolt.NetworkProperty_Color();
    tmp1.PropertyMeta = this;
    tmp1.Settings_Property("CubeColor", 1, -1073741824);
    tmp1.Settings_Offsets(1 /*required-properties:1*/, 3 /*required-storage:1*/);
    this.AddProperty(1 /*required-properties:1*/, 0 /*required-objects:0*/, tmp1, -1);
    base.InitMeta();
  }
  object Bolt.IFactory.Create() {
    return new CubeState();
  }
}
namespace Bolt {
  
  public class GlobalEventListener : BoltInternal.GlobalEventListenerBase {
  }
  public class EntityEventListener : BoltInternal.EntityEventListenerBase {
  }
  public class EntityEventListener<TState> : BoltInternal.EntityEventListenerBase<TState> {
  }
}
namespace BoltInternal {
  
  public abstract class StateSerializerTypeIds {
    public static Bolt.UniqueId ICubeState = new Bolt.UniqueId(4, 53, 104, 44, 140, 126, 4, 72, 184, 168, 45, 215, 19, 190, 60, 130);
  }
}
